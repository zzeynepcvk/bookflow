rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    // Onay kontrolü hem custom claim hem de users/{uid} dokümanından yapılır
    function isApproved() {
      return isSignedIn() && (
        request.auth.token.approved == true ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.approved == true
      );
    }

    // users koleksiyonu
    match /users/{userId} {
      allow create: if isSignedIn()
                    && request.auth.uid == userId
                    && request.resource.data.keys().hasAny(['email','approved','createdAt'])
                    && request.resource.data.approved == false
                    && request.resource.data.email == request.auth.token.email;
      allow read: if isSignedIn() && request.auth.uid == userId;
      // Kullanıcı kendi dokümanını güncelleyemesin (onay admin tarafından verilir)
      allow update, delete: if false;
    }

    // books koleksiyonu
    match /books/{bookId} {
      allow create: if isApproved()
                    && request.resource.data.ownerId == request.auth.uid;
      allow read, update, delete: if isApproved()
                                  && resource.data.ownerId == request.auth.uid;
    }
  }
}
